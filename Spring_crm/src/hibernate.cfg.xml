<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE hibernate-configuration PUBLIC
    "-//Hibernate/Hibernate Configuration DTD//EN"
    "http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">

<!--Hibernate主配置文件-->

<hibernate-configuration>
  <session-factory>

    <!--
		#hibernate.dialect org.hibernate.dialect.MySQLDialect(针对不同的数据库引擎,这是一个默认的,通用的语法)
		#hibernate.dialect org.hibernate.dialect.MySQLInnoDBDialect
		#hibernate.dialect org.hibernate.dialect.MySQLMyISAMDialect
		#hibernate.connection.driver_class com.mysql.jdbc.Driver
		#hibernate.connection.url jdbc:mysqla_hellotest
		#hibernate.connection.username gavin
		#hibernate.connection.password
		 -->
    <!--必选配置项: 5项-->
    <!--配置连接数据库的基本信息-->

    <!--在这里hibernate前缀可以写也可以不写，但当与spring集成的时候就必须加上前缀-->
    <!--<property name="connection.username"></property>-->


    <!-- 数据库连接用户名 -->
    <property name="hibernate.connection.username">root</property>
    <!-- 数据库连接密码 -->
    <property name="hibernate.connection.password">123456</property>
    <!-- 数据库驱动 -->
    <property name="hibernate.connection.driver_class">com.mysql.jdbc.Driver</property>
    <!-- 数据库url -->
    <property name="hibernate.connection.url">jdbc:mysql:///hibernate_day01?useUnicode=true&amp;characterEncoding=UTF8</property>
    <!-- 数据库方言
			不同的数据库中,sql语法略有区别. 指定方言可以让hibernate框架在生成sql语句时.针对数据库的方言生成.
			sql99标准: DDL 定义语言  库表的增删改查
					  DCL 控制语言  事务 权限
					  DML 操纵语言  增删改查
			注意: MYSQL在选择方言时,请选择最短的方言.
		 -->
    <property name="hibernate.dialect">org.hibernate.dialect.MySQLDialect</property>

    <!-- #hibernate.show_sql true
			 #hibernate.format_sql true
		-->
    <!--可选配置项: 3项-->
    <!--配置hibernate的基本信息-->


    <!-- 将hibernate生成的sql语句打印到控制台 -->
    <property name="hibernate.show_sql">true</property>
    <!-- 将hibernate生成的sql语句格式化(语法缩进) -->
    <property name="hibernate.format_sql">true</property>
    <!--
		## auto schema export  自动导出表结构
		#hibernate.hbm2ddl.auto create		自动建表.每次框架运行都会创建新的表.以前表将会被覆盖,表数据会丢失.(开发环境中测试使用)
		#hibernate.hbm2ddl.auto create-drop 自动建表.每次框架运行结束都会将所有表删除.(开发环境中测试使用)
		#hibernate.hbm2ddl.auto update(推荐使用) 自动生成表.如果已经存在不会再生成.如果表有变动.自动更新表(不会删除任何数据).
		#hibernate.hbm2ddl.auto validate	校验.不自动生成表.每次启动会校验数据库中表是否正确.校验失败.
	-->
    <property name="hibernate.hbm2ddl.auto">update</property>


    <!--指定Session对象与当前线程绑定-->
    <property name="hibernate.current_session_context_class">thread</property>


    <!--注解类: hibernate用注解配置实体类的映射
        当我们在实体类中使用了注解时,我们可以导入以下配置项
     -->
    <!--<mapping class="com.itheima.domain.Customer"/>
    <mapping class="com.itheima.domain.LinkMan"/>-->
    <!--引入ORM元数据(对象关系映射配置文件)
      路径书写: 填写相对于src下的路径
    -->
    <mapping resource="com/itheima/domain/Customer.hbm.xml"/>
    <mapping resource="com/itheima/domain/LinkMan.hbm.xml"/>
    <mapping resource="com/itheima/domain/User.hbm.xml"/>

  </session-factory>
</hibernate-configuration>